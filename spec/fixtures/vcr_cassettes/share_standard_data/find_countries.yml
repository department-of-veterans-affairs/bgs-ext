---
http_interactions:
- request:
    method: get
    uri: https://localhost:4447/StandardDataWebServiceBean/StandardDataWebService?WSDL
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.8.3, ruby 2.5.3 (2018-10-18))
      Accept:
      - "*/*"
      Date:
      - Wed, 25 Aug 2021 14:58:51 GMT
      Host:
      - linktest.vba.va.gov
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 25 Aug 2021 14:58:52 GMT
      Server:
      - Apache
      X-Frame-Options:
      - SAMEORIGIN
      Transfer-Encoding:
      - chunked
      Content-Type:
      - text/xml;charset=utf-8
    body:
      encoding: UTF-8
      string: |-
        <?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.3.0-b170407.2038 svn-revision#2eaca54d17a59d265c6fe886b7fd0027836c766c. --><!-- Generated by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.3.0-b170407.2038 svn-revision#2eaca54d17a59d265c6fe886b7fd0027836c766c. --><definitions xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://standarddata.services.vetsnet.vba.va.gov/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://standarddata.services.vetsnet.vba.va.gov/" name="StandardDataWebService">
        <types>
        <xsd:schema>
        <xsd:import namespace="http://standarddata.services.vetsnet.vba.va.gov/" schemaLocation="http://linktestbepbenefits.vba.va.gov:80/StandardDataWebServiceBean/StandardDataWebService?xsd=1"/>
        </xsd:schema>
        </types>
        <message name="findFlashes">
        <part name="parameters" element="tns:findFlashes"/>
        </message>
        <message name="findFlashesResponse">
        <part name="parameters" element="tns:findFlashesResponse"/>
        </message>
        <message name="MessageException">
        <part name="fault" element="tns:MessageException"/>
        </message>
        <message name="findStates">
        <part name="parameters" element="tns:findStates"/>
        </message>
        <message name="findStatesResponse">
        <part name="parameters" element="tns:findStatesResponse"/>
        </message>
        <message name="findCountries">
        <part name="parameters" element="tns:findCountries"/>
        </message>
        <message name="findCountriesResponse">
        <part name="parameters" element="tns:findCountriesResponse"/>
        </message>
        <message name="findRegionalOffices">
        <part name="parameters" element="tns:findRegionalOffices"/>
        </message>
        <message name="findRegionalOfficesResponse">
        <part name="parameters" element="tns:findRegionalOfficesResponse"/>
        </message>
        <message name="findStations">
        <part name="parameters" element="tns:findStations"/>
        </message>
        <message name="findStationsResponse">
        <part name="parameters" element="tns:findStationsResponse"/>
        </message>
        <message name="findPayeeCdsByBnftClaimTypeCd">
        <part name="parameters" element="tns:findPayeeCdsByBnftClaimTypeCd"/>
        </message>
        <message name="findPayeeCdsByBnftClaimTypeCdResponse">
        <part name="parameters" element="tns:findPayeeCdsByBnftClaimTypeCdResponse"/>
        </message>
        <message name="findPayeeCdByPgmTypeCd">
        <part name="parameters" element="tns:findPayeeCdByPgmTypeCd"/>
        </message>
        <message name="findPayeeCdByPgmTypeCdResponse">
        <part name="parameters" element="tns:findPayeeCdByPgmTypeCdResponse"/>
        </message>
        <message name="findAllBddIntakeSites">
        <part name="parameters" element="tns:findAllBddIntakeSites"/>
        </message>
        <message name="findAllBddIntakeSitesResponse">
        <part name="parameters" element="tns:findAllBddIntakeSitesResponse"/>
        </message>
        <message name="findSignaturesByStationNumber">
        <part name="parameters" element="tns:findSignaturesByStationNumber"/>
        </message>
        <message name="findSignaturesByStationNumberResponse">
        <part name="parameters" element="tns:findSignaturesByStationNumberResponse"/>
        </message>
        <message name="findBenefitClaimTypeIncrements">
        <part name="parameters" element="tns:findBenefitClaimTypeIncrements"/>
        </message>
        <message name="findBenefitClaimTypeIncrementsResponse">
        <part name="parameters" element="tns:findBenefitClaimTypeIncrementsResponse"/>
        </message>
        <message name="findBenefitClaimTypeIncrement">
        <part name="parameters" element="tns:findBenefitClaimTypeIncrement"/>
        </message>
        <message name="findBenefitClaimTypeIncrementResponse">
        <part name="parameters" element="tns:findBenefitClaimTypeIncrementResponse"/>
        </message>
        <message name="findOtherMilitaryBranches">
        <part name="parameters" element="tns:findOtherMilitaryBranches"/>
        </message>
        <message name="findOtherMilitaryBranchesResponse">
        <part name="parameters" element="tns:findOtherMilitaryBranchesResponse"/>
        </message>
        <message name="findBenefitClaimLifeCycleStatuses">
        <part name="parameters" element="tns:findBenefitClaimLifeCycleStatuses"/>
        </message>
        <message name="findBenefitClaimLifeCycleStatusesResponse">
        <part name="parameters" element="tns:findBenefitClaimLifeCycleStatusesResponse"/>
        </message>
        <message name="findPoaCdByNm">
        <part name="parameters" element="tns:findPoaCdByNm"/>
        </message>
        <message name="findPoaCdByNmResponse">
        <part name="parameters" element="tns:findPoaCdByNmResponse"/>
        </message>
        <message name="findAllBenefitClaimTypes">
        <part name="parameters" element="tns:findAllBenefitClaimTypes"/>
        </message>
        <message name="findAllBenefitClaimTypesResponse">
        <part name="parameters" element="tns:findAllBenefitClaimTypesResponse"/>
        </message>
        <message name="findMilitaryBranches">
        <part name="parameters" element="tns:findMilitaryBranches"/>
        </message>
        <message name="findMilitaryBranchesResponse">
        <part name="parameters" element="tns:findMilitaryBranchesResponse"/>
        </message>
        <message name="findOrganizationTypes">
        <part name="parameters" element="tns:findOrganizationTypes"/>
        </message>
        <message name="findOrganizationTypesResponse">
        <part name="parameters" element="tns:findOrganizationTypesResponse"/>
        </message>
        <message name="findPrefByPoaCd">
        <part name="parameters" element="tns:findPrefByPoaCd"/>
        </message>
        <message name="findPrefByPoaCdResponse">
        <part name="parameters" element="tns:findPrefByPoaCdResponse"/>
        </message>
        <message name="findForeignStates">
        <part name="parameters" element="tns:findForeignStates"/>
        </message>
        <message name="findForeignStatesResponse">
        <part name="parameters" element="tns:findForeignStatesResponse"/>
        </message>
        <message name="findUSStates">
        <part name="parameters" element="tns:findUSStates"/>
        </message>
        <message name="findUSStatesResponse">
        <part name="parameters" element="tns:findUSStatesResponse"/>
        </message>
        <message name="findClaimSuspnsReasons">
        <part name="parameters" element="tns:findClaimSuspnsReasons"/>
        </message>
        <message name="findClaimSuspnsReasonsResponse">
        <part name="parameters" element="tns:findClaimSuspnsReasonsResponse"/>
        </message>
        <message name="findPrefByPtcpntId">
        <part name="parameters" element="tns:findPrefByPtcpntId"/>
        </message>
        <message name="findPrefByPtcpntIdResponse">
        <part name="parameters" element="tns:findPrefByPtcpntIdResponse"/>
        </message>
        <message name="updatePref">
        <part name="parameters" element="tns:updatePref"/>
        </message>
        <message name="updatePrefResponse">
        <part name="parameters" element="tns:updatePrefResponse"/>
        </message>
        <message name="findCemeteries">
        <part name="parameters" element="tns:findCemeteries"/>
        </message>
        <message name="findCemeteriesResponse">
        <part name="parameters" element="tns:findCemeteriesResponse"/>
        </message>
        <message name="findPOAs">
        <part name="parameters" element="tns:findPOAs"/>
        </message>
        <message name="findPOAsResponse">
        <part name="parameters" element="tns:findPOAsResponse"/>
        </message>
        <message name="findSpecialIssues">
        <part name="parameters" element="tns:findSpecialIssues"/>
        </message>
        <message name="findSpecialIssuesResponse">
        <part name="parameters" element="tns:findSpecialIssuesResponse"/>
        </message>
        <message name="findBenefitClaimTypes">
        <part name="parameters" element="tns:findBenefitClaimTypes"/>
        </message>
        <message name="findBenefitClaimTypesResponse">
        <part name="parameters" element="tns:findBenefitClaimTypesResponse"/>
        </message>
        <message name="findEndProductTypes">
        <part name="parameters" element="tns:findEndProductTypes"/>
        </message>
        <message name="findEndProductTypesResponse">
        <part name="parameters" element="tns:findEndProductTypesResponse"/>
        </message>
        <message name="findPayeeTypes">
        <part name="parameters" element="tns:findPayeeTypes"/>
        </message>
        <message name="findPayeeTypesResponse">
        <part name="parameters" element="tns:findPayeeTypesResponse"/>
        </message>
        <message name="findPhoneTypes">
        <part name="parameters" element="tns:findPhoneTypes"/>
        </message>
        <message name="findPhoneTypesResponse">
        <part name="parameters" element="tns:findPhoneTypesResponse"/>
        </message>
        <message name="findListType">
        <part name="parameters" element="tns:findListType"/>
        </message>
        <message name="findListTypeResponse">
        <part name="parameters" element="tns:findListTypeResponse"/>
        </message>
        <message name="findItfCanctnReasonTypes">
        <part name="parameters" element="tns:findItfCanctnReasonTypes"/>
        </message>
        <message name="findItfCanctnReasonTypesResponse">
        <part name="parameters" element="tns:findItfCanctnReasonTypesResponse"/>
        </message>
        <message name="findSubmtrApplcnTypes">
        <part name="parameters" element="tns:findSubmtrApplcnTypes"/>
        </message>
        <message name="findSubmtrApplcnTypesResponse">
        <part name="parameters" element="tns:findSubmtrApplcnTypesResponse"/>
        </message>
        <message name="findSubmtrRoleTypes">
        <part name="parameters" element="tns:findSubmtrRoleTypes"/>
        </message>
        <message name="findSubmtrRoleTypesResponse">
        <part name="parameters" element="tns:findSubmtrRoleTypesResponse"/>
        </message>
        <message name="findPreDischargeType">
        <part name="parameters" element="tns:findPreDischargeType"/>
        </message>
        <message name="findPreDischargeTypeResponse">
        <part name="parameters" element="tns:findPreDischargeTypeResponse"/>
        </message>
        <message name="findVreFormTypes">
        <part name="parameters" element="tns:findVreFormTypes"/>
        </message>
        <message name="findVreFormTypesResponse">
        <part name="parameters" element="tns:findVreFormTypesResponse"/>
        </message>
        <portType name="StandardDataWebService">
        <operation name="findFlashes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findFlashesRequest" message="tns:findFlashes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findFlashesResponse" message="tns:findFlashesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findFlashes/Fault/MessageException"/>
        </operation>
        <operation name="findStates">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findStatesRequest" message="tns:findStates"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findStatesResponse" message="tns:findStatesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findStates/Fault/MessageException"/>
        </operation>
        <operation name="findCountries">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findCountriesRequest" message="tns:findCountries"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findCountriesResponse" message="tns:findCountriesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findCountries/Fault/MessageException"/>
        </operation>
        <operation name="findRegionalOffices">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findRegionalOfficesRequest" message="tns:findRegionalOffices"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findRegionalOfficesResponse" message="tns:findRegionalOfficesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findRegionalOffices/Fault/MessageException"/>
        </operation>
        <operation name="findStations">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findStationsRequest" message="tns:findStations"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findStationsResponse" message="tns:findStationsResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findStations/Fault/MessageException"/>
        </operation>
        <operation name="findPayeeCdsByBnftClaimTypeCd">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeCdsByBnftClaimTypeCdRequest" message="tns:findPayeeCdsByBnftClaimTypeCd"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeCdsByBnftClaimTypeCdResponse" message="tns:findPayeeCdsByBnftClaimTypeCdResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeCdsByBnftClaimTypeCd/Fault/MessageException"/>
        </operation>
        <operation name="findPayeeCdByPgmTypeCd">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeCdByPgmTypeCdRequest" message="tns:findPayeeCdByPgmTypeCd"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeCdByPgmTypeCdResponse" message="tns:findPayeeCdByPgmTypeCdResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeCdByPgmTypeCd/Fault/MessageException"/>
        </operation>
        <operation name="findAllBddIntakeSites">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findAllBddIntakeSitesRequest" message="tns:findAllBddIntakeSites"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findAllBddIntakeSitesResponse" message="tns:findAllBddIntakeSitesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findAllBddIntakeSites/Fault/MessageException"/>
        </operation>
        <operation name="findSignaturesByStationNumber">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSignaturesByStationNumberRequest" message="tns:findSignaturesByStationNumber"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSignaturesByStationNumberResponse" message="tns:findSignaturesByStationNumberResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSignaturesByStationNumber/Fault/MessageException"/>
        </operation>
        <operation name="findBenefitClaimTypeIncrements">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimTypeIncrementsRequest" message="tns:findBenefitClaimTypeIncrements"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimTypeIncrementsResponse" message="tns:findBenefitClaimTypeIncrementsResponse"/>
        </operation>
        <operation name="findBenefitClaimTypeIncrement">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimTypeIncrementRequest" message="tns:findBenefitClaimTypeIncrement"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimTypeIncrementResponse" message="tns:findBenefitClaimTypeIncrementResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimTypeIncrement/Fault/MessageException"/>
        </operation>
        <operation name="findOtherMilitaryBranches">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findOtherMilitaryBranchesRequest" message="tns:findOtherMilitaryBranches"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findOtherMilitaryBranchesResponse" message="tns:findOtherMilitaryBranchesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findOtherMilitaryBranches/Fault/MessageException"/>
        </operation>
        <operation name="findBenefitClaimLifeCycleStatuses">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimLifeCycleStatusesRequest" message="tns:findBenefitClaimLifeCycleStatuses"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimLifeCycleStatusesResponse" message="tns:findBenefitClaimLifeCycleStatusesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimLifeCycleStatuses/Fault/MessageException"/>
        </operation>
        <operation name="findPoaCdByNm">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPoaCdByNmRequest" message="tns:findPoaCdByNm"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPoaCdByNmResponse" message="tns:findPoaCdByNmResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPoaCdByNm/Fault/MessageException"/>
        </operation>
        <operation name="findAllBenefitClaimTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findAllBenefitClaimTypesRequest" message="tns:findAllBenefitClaimTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findAllBenefitClaimTypesResponse" message="tns:findAllBenefitClaimTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findAllBenefitClaimTypes/Fault/MessageException"/>
        </operation>
        <operation name="findMilitaryBranches">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findMilitaryBranchesRequest" message="tns:findMilitaryBranches"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findMilitaryBranchesResponse" message="tns:findMilitaryBranchesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findMilitaryBranches/Fault/MessageException"/>
        </operation>
        <operation name="findOrganizationTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findOrganizationTypesRequest" message="tns:findOrganizationTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findOrganizationTypesResponse" message="tns:findOrganizationTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findOrganizationTypes/Fault/MessageException"/>
        </operation>
        <operation name="findPrefByPoaCd">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPrefByPoaCdRequest" message="tns:findPrefByPoaCd"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPrefByPoaCdResponse" message="tns:findPrefByPoaCdResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPrefByPoaCd/Fault/MessageException"/>
        </operation>
        <operation name="findForeignStates">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findForeignStatesRequest" message="tns:findForeignStates"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findForeignStatesResponse" message="tns:findForeignStatesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findForeignStates/Fault/MessageException"/>
        </operation>
        <operation name="findUSStates">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findUSStatesRequest" message="tns:findUSStates"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findUSStatesResponse" message="tns:findUSStatesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findUSStates/Fault/MessageException"/>
        </operation>
        <operation name="findClaimSuspnsReasons">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findClaimSuspnsReasonsRequest" message="tns:findClaimSuspnsReasons"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findClaimSuspnsReasonsResponse" message="tns:findClaimSuspnsReasonsResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findClaimSuspnsReasons/Fault/MessageException"/>
        </operation>
        <operation name="findPrefByPtcpntId">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPrefByPtcpntIdRequest" message="tns:findPrefByPtcpntId"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPrefByPtcpntIdResponse" message="tns:findPrefByPtcpntIdResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPrefByPtcpntId/Fault/MessageException"/>
        </operation>
        <operation name="updatePref">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/updatePrefRequest" message="tns:updatePref"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/updatePrefResponse" message="tns:updatePrefResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/updatePref/Fault/MessageException"/>
        </operation>
        <operation name="findCemeteries">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findCemeteriesRequest" message="tns:findCemeteries"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findCemeteriesResponse" message="tns:findCemeteriesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findCemeteries/Fault/MessageException"/>
        </operation>
        <operation name="findPOAs">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPOAsRequest" message="tns:findPOAs"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPOAsResponse" message="tns:findPOAsResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPOAs/Fault/MessageException"/>
        </operation>
        <operation name="findSpecialIssues">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSpecialIssuesRequest" message="tns:findSpecialIssues"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSpecialIssuesResponse" message="tns:findSpecialIssuesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSpecialIssues/Fault/MessageException"/>
        </operation>
        <operation name="findBenefitClaimTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimTypesRequest" message="tns:findBenefitClaimTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimTypesResponse" message="tns:findBenefitClaimTypesResponse"/>
        </operation>
        <operation name="findEndProductTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findEndProductTypesRequest" message="tns:findEndProductTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findEndProductTypesResponse" message="tns:findEndProductTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findEndProductTypes/Fault/MessageException"/>
        </operation>
        <operation name="findPayeeTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeTypesRequest" message="tns:findPayeeTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeTypesResponse" message="tns:findPayeeTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeTypes/Fault/MessageException"/>
        </operation>
        <operation name="findPhoneTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPhoneTypesRequest" message="tns:findPhoneTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPhoneTypesResponse" message="tns:findPhoneTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPhoneTypes/Fault/MessageException"/>
        </operation>
        <operation name="findListType">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findListTypeRequest" message="tns:findListType"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findListTypeResponse" message="tns:findListTypeResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findListType/Fault/MessageException"/>
        </operation>
        <operation name="findItfCanctnReasonTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findItfCanctnReasonTypesRequest" message="tns:findItfCanctnReasonTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findItfCanctnReasonTypesResponse" message="tns:findItfCanctnReasonTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findItfCanctnReasonTypes/Fault/MessageException"/>
        </operation>
        <operation name="findSubmtrApplcnTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSubmtrApplcnTypesRequest" message="tns:findSubmtrApplcnTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSubmtrApplcnTypesResponse" message="tns:findSubmtrApplcnTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSubmtrApplcnTypes/Fault/MessageException"/>
        </operation>
        <operation name="findSubmtrRoleTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSubmtrRoleTypesRequest" message="tns:findSubmtrRoleTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSubmtrRoleTypesResponse" message="tns:findSubmtrRoleTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSubmtrRoleTypes/Fault/MessageException"/>
        </operation>
        <operation name="findPreDischargeType">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPreDischargeTypeRequest" message="tns:findPreDischargeType"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPreDischargeTypeResponse" message="tns:findPreDischargeTypeResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPreDischargeType/Fault/MessageException"/>
        </operation>
        <operation name="findVreFormTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findVreFormTypesRequest" message="tns:findVreFormTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findVreFormTypesResponse" message="tns:findVreFormTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findVreFormTypes/Fault/MessageException"/>
        </operation>
        </portType>
        <binding name="StandardDataWebServicePortBinding" type="tns:StandardDataWebService">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
        <operation name="findFlashes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findStates">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findCountries">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findRegionalOffices">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findStations">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPayeeCdsByBnftClaimTypeCd">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPayeeCdByPgmTypeCd">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findAllBddIntakeSites">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findSignaturesByStationNumber">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findBenefitClaimTypeIncrements">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        </operation>
        <operation name="findBenefitClaimTypeIncrement">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findOtherMilitaryBranches">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findBenefitClaimLifeCycleStatuses">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPoaCdByNm">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findAllBenefitClaimTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findMilitaryBranches">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findOrganizationTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPrefByPoaCd">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findForeignStates">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findUSStates">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findClaimSuspnsReasons">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPrefByPtcpntId">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="updatePref">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findCemeteries">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPOAs">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findSpecialIssues">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findBenefitClaimTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        </operation>
        <operation name="findEndProductTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPayeeTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPhoneTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findListType">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findItfCanctnReasonTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findSubmtrApplcnTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findSubmtrRoleTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPreDischargeType">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findVreFormTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        </binding>
        <service name="StandardDataWebService">
        <port name="StandardDataWebServicePort" binding="tns:StandardDataWebServicePortBinding">
        <soap:address location="http://linktestbepbenefits.vba.va.gov:80/StandardDataWebServiceBean/StandardDataWebService"/>
        </port>
        </service>
        </definitions>
  recorded_at: Wed, 25 Aug 2021 14:58:52 GMT
- request:
    method: post
    uri: https://localhost:4447/StandardDataWebServiceBean/StandardDataWebService
    body:
      encoding: UTF-8
      string: |-
        <?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://standarddata.services.vetsnet.vba.va.gov/" xmlns:env="http://schemas.xmlsoap.org/soap/envelope/"><env:Header><wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
          <wsse:UsernameToken>
            <wsse:Username>VAgovAPI</wsse:Username>
          </wsse:UsernameToken>
          <vaws:VaServiceHeaders xmlns:vaws="http://vbawebservices.vba.va.gov/vawss">
            <vaws:CLIENT_MACHINE>127.0.0.1</vaws:CLIENT_MACHINE>
            <vaws:STN_ID>281</vaws:STN_ID>
            <vaws:applicationName>VAgovAPI</vaws:applicationName>
            <vaws:ExternalUid>something</vaws:ExternalUid>
            <vaws:ExternalKey>something</vaws:ExternalKey>
          </vaws:VaServiceHeaders>
        </wsse:Security>
        </env:Header><env:Body><tns:findCountries></tns:findCountries></env:Body></env:Envelope>
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.8.3, ruby 2.5.3 (2018-10-18))
      Accept:
      - "*/*"
      Date:
      - Wed, 25 Aug 2021 14:58:52 GMT
      Host:
      - linktest.vba.va.gov
      Soapaction:
      - '"findCountries"'
      Content-Type:
      - text/xml;charset=UTF-8
      Content-Length:
      - '942'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 25 Aug 2021 14:58:53 GMT
      Server:
      - Apache
      X-Frame-Options:
      - SAMEORIGIN
      Transfer-Encoding:
      - chunked
      Content-Type:
      - text/xml; charset=utf-8
    body:
      encoding: UTF-8
      string: <?xml version='1.0' encoding='UTF-8'?><S:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/"
        xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"><env:Header><work:WorkContext
        xmlns:work="http://oracle.com/weblogic/soap/workarea/">rO0ABXdTAB13ZWJsb2dpYy5hcHAuQ29ycG9yYXRlRGF0YUVBUgAAANYAAAAjd2VibG9naWMud29ya2FyZWEuU3RyaW5nV29ya0NvbnRleHQABTMuMi42AAA=</work:WorkContext></env:Header><S:Body><ns0:findCountriesResponse
        xmlns:ns0="http://standarddata.services.vetsnet.vba.va.gov/"><return><cntryTypeCd>932</cntryTypeCd><cntryTypeNm>Afghanistan</cntryTypeNm></return><return><cntryTypeCd>942</cntryTypeCd><cntryTypeNm>Albania</cntryTypeNm></return><return><cntryTypeCd>952</cntryTypeCd><cntryTypeNm>Algeria</cntryTypeNm></return><return><cntryTypeCd>893</cntryTypeCd><cntryTypeNm>Angola</cntryTypeNm></return><return><cntryTypeCd>816</cntryTypeCd><cntryTypeNm>Anguilla</cntryTypeNm></return><return><cntryTypeCd>816</cntryTypeCd><cntryTypeNm>Antigua</cntryTypeNm></return><return><cntryTypeCd>816</cntryTypeCd><cntryTypeNm>Antigua
        and Barbuda</cntryTypeNm></return><return><cntryTypeCd>858</cntryTypeCd><cntryTypeNm>Argentina</cntryTypeNm></return><return><cntryTypeCd>711</cntryTypeCd><cntryTypeNm>Armenia</cntryTypeNm></return><return><cntryTypeCd>708</cntryTypeCd><cntryTypeNm>Australia</cntryTypeNm><eftCntryCd>61</eftCntryCd><eftCntryNm>Australia</eftCntryNm></return><return><cntryTypeCd>972</cntryTypeCd><cntryTypeNm>Austria</cntryTypeNm></return><return><cntryTypeCd>716</cntryTypeCd><cntryTypeNm>Azerbaijan</cntryTypeNm></return><return><cntryTypeCd>715</cntryTypeCd><cntryTypeNm>Azores</cntryTypeNm></return><return><cntryTypeCd>808</cntryTypeCd><cntryTypeNm>Bahamas</cntryTypeNm></return><return><cntryTypeCd>832</cntryTypeCd><cntryTypeNm>Bahrain</cntryTypeNm></return><return><cntryTypeCd>865</cntryTypeCd><cntryTypeNm>Bangladesh</cntryTypeNm></return><return><cntryTypeCd>818</cntryTypeCd><cntryTypeNm>Barbados</cntryTypeNm></return><return><cntryTypeCd>816</cntryTypeCd><cntryTypeNm>Barbuda</cntryTypeNm></return><return><cntryTypeCd>727</cntryTypeCd><cntryTypeNm>Belarus</cntryTypeNm></return><return><cntryTypeCd>748</cntryTypeCd><cntryTypeNm>Belgium</cntryTypeNm></return><return><cntryTypeCd>992</cntryTypeCd><cntryTypeNm>Belize</cntryTypeNm></return><return><cntryTypeCd>692</cntryTypeCd><cntryTypeNm>Benin</cntryTypeNm></return><return><cntryTypeCd>828</cntryTypeCd><cntryTypeNm>Bermuda</cntryTypeNm></return><return><cntryTypeCd>862</cntryTypeCd><cntryTypeNm>Bhutan</cntryTypeNm></return><return><cntryTypeCd>913</cntryTypeCd><cntryTypeNm>Bolivia</cntryTypeNm></return><return><cntryTypeCd>817</cntryTypeCd><cntryTypeNm>Bosnia-Herzegovina</cntryTypeNm></return><return><cntryTypeCd>663</cntryTypeCd><cntryTypeNm>Botswana</cntryTypeNm></return><return><cntryTypeCd>706</cntryTypeCd><cntryTypeNm>Brazil</cntryTypeNm></return><return><cntryTypeCd>820</cntryTypeCd><cntryTypeNm>Brunei</cntryTypeNm></return><return><cntryTypeCd>903</cntryTypeCd><cntryTypeNm>Bulgaria</cntryTypeNm></return><return><cntryTypeCd>689</cntryTypeCd><cntryTypeNm>Burkina
        Faso</cntryTypeNm></return><return><cntryTypeCd>923</cntryTypeCd><cntryTypeNm>Burma</cntryTypeNm></return><return><cntryTypeCd>683</cntryTypeCd><cntryTypeNm>Burundi</cntryTypeNm></return><return><cntryTypeCd>981</cntryTypeCd><cntryTypeNm>Cambodia</cntryTypeNm></return><return><cntryTypeCd>943</cntryTypeCd><cntryTypeNm>Cameroon</cntryTypeNm></return><return><cntryTypeCd>953</cntryTypeCd><cntryTypeNm>Canada</cntryTypeNm><eftCntryCd>51</eftCntryCd><eftCntryNm>Canada</eftCntryNm></return><return><cntryTypeCd>710</cntryTypeCd><cntryTypeNm>Cape
        Verde</cntryTypeNm></return><return><cntryTypeCd>838</cntryTypeCd><cntryTypeNm>Cayman
        Islands</cntryTypeNm></return><return><cntryTypeCd>690</cntryTypeCd><cntryTypeNm>Central
        African Republic</cntryTypeNm></return><return><cntryTypeCd>691</cntryTypeCd><cntryTypeNm>Chad</cntryTypeNm></return><return><cntryTypeCd>768</cntryTypeCd><cntryTypeNm>Chile</cntryTypeNm></return><return><cntryTypeCd>973</cntryTypeCd><cntryTypeNm>China</cntryTypeNm></return><return><cntryTypeCd>757</cntryTypeCd><cntryTypeNm>Colombia</cntryTypeNm></return><return><cntryTypeCd>876</cntryTypeCd><cntryTypeNm>Comoros</cntryTypeNm></return><return><cntryTypeCd>719</cntryTypeCd><cntryTypeNm>Congo,
        Democratic Republic of</cntryTypeNm></return><return><cntryTypeCd>670</cntryTypeCd><cntryTypeNm>Congo,
        People's Republic of</cntryTypeNm></return><return><cntryTypeCd>983</cntryTypeCd><cntryTypeNm>Costa
        Rica</cntryTypeNm></return><return><cntryTypeCd>819</cntryTypeCd><cntryTypeNm>Cote
        d'Ivoire</cntryTypeNm></return><return><cntryTypeCd>651</cntryTypeCd><cntryTypeNm>Croatia</cntryTypeNm></return><return><cntryTypeCd>737</cntryTypeCd><cntryTypeNm>Cuba</cntryTypeNm></return><return><cntryTypeCd>904</cntryTypeCd><cntryTypeNm>Cyprus</cntryTypeNm></return><return><cntryTypeCd>914</cntryTypeCd><cntryTypeNm>Czech
        Republic</cntryTypeNm></return><return><cntryTypeCd>924</cntryTypeCd><cntryTypeNm>Denmark</cntryTypeNm></return><return><cntryTypeCd>799</cntryTypeCd><cntryTypeNm>Djibouti</cntryTypeNm></return><return><cntryTypeCd>811</cntryTypeCd><cntryTypeNm>Dominica</cntryTypeNm></return><return><cntryTypeCd>934</cntryTypeCd><cntryTypeNm>Dominican
        Republic</cntryTypeNm></return><return><cntryTypeCd>729</cntryTypeCd><cntryTypeNm>Ecuador</cntryTypeNm></return><return><cntryTypeCd>759</cntryTypeCd><cntryTypeNm>Egypt</cntryTypeNm></return><return><cntryTypeCd>958</cntryTypeCd><cntryTypeNm>El
        Salvador</cntryTypeNm></return><return><cntryTypeCd>800</cntryTypeCd><cntryTypeNm>England</cntryTypeNm></return><return><cntryTypeCd>898</cntryTypeCd><cntryTypeNm>Equatorial
        Guinea</cntryTypeNm></return><return><cntryTypeCd>760</cntryTypeCd><cntryTypeNm>Eritrea</cntryTypeNm></return><return><cntryTypeCd>995</cntryTypeCd><cntryTypeNm>Estonia</cntryTypeNm></return><return><cntryTypeCd>779</cntryTypeCd><cntryTypeNm>Ethiopia</cntryTypeNm></return><return><cntryTypeCd>809</cntryTypeCd><cntryTypeNm>Fiji</cntryTypeNm></return><return><cntryTypeCd>964</cntryTypeCd><cntryTypeNm>Finland</cntryTypeNm></return><return><cntryTypeCd>912</cntryTypeCd><cntryTypeNm>France</cntryTypeNm><eftCntryCd>56</eftCntryCd><eftCntryNm>France</eftCntryNm></return><return><cntryTypeCd>888</cntryTypeCd><cntryTypeNm>French
        Guiana</cntryTypeNm></return><return><cntryTypeCd>693</cntryTypeCd><cntryTypeNm>Gabon</cntryTypeNm></return><return><cntryTypeCd>698</cntryTypeCd><cntryTypeNm>Gambia</cntryTypeNm></return><return><cntryTypeCd>730</cntryTypeCd><cntryTypeNm>Georgia</cntryTypeNm></return><return><cntryTypeCd>732</cntryTypeCd><cntryTypeNm>Germany</cntryTypeNm><eftCntryCd>52</eftCntryCd><eftCntryNm>Germany</eftCntryNm></return><return><cntryTypeCd>984</cntryTypeCd><cntryTypeNm>Ghana</cntryTypeNm></return><return><cntryTypeCd>800</cntryTypeCd><cntryTypeNm>Gibraltar</cntryTypeNm></return><return><cntryTypeCd>800</cntryTypeCd><cntryTypeNm>Great
        Britain</cntryTypeNm></return><return><cntryTypeCd>800</cntryTypeCd><cntryTypeNm>Great
        Britain and Gibraltar</cntryTypeNm></return><return><cntryTypeCd>701</cntryTypeCd><cntryTypeNm>Greece</cntryTypeNm></return><return><cntryTypeCd>924</cntryTypeCd><cntryTypeNm>Greenland</cntryTypeNm></return><return><cntryTypeCd>813</cntryTypeCd><cntryTypeNm>Grenada</cntryTypeNm></return><return><cntryTypeCd>881</cntryTypeCd><cntryTypeNm>Guadeloupe</cntryTypeNm></return><return><cntryTypeCd>915</cntryTypeCd><cntryTypeNm>Guatemala</cntryTypeNm></return><return><cntryTypeCd>928</cntryTypeCd><cntryTypeNm>Guinea</cntryTypeNm></return><return><cntryTypeCd>928</cntryTypeCd><cntryTypeNm>Guinea,
        Republic of Guinea</cntryTypeNm></return><return><cntryTypeCd>910</cntryTypeCd><cntryTypeNm>Guinea-Bissau</cntryTypeNm></return><return><cntryTypeCd>894</cntryTypeCd><cntryTypeNm>Guyana</cntryTypeNm></return><return><cntryTypeCd>925</cntryTypeCd><cntryTypeNm>Haiti</cntryTypeNm></return><return><cntryTypeCd>822</cntryTypeCd><cntryTypeNm>Honduras</cntryTypeNm></return><return><cntryTypeCd>945</cntryTypeCd><cntryTypeNm>Hong
        Kong</cntryTypeNm></return><return><cntryTypeCd>955</cntryTypeCd><cntryTypeNm>Hungary</cntryTypeNm></return><return><cntryTypeCd>965</cntryTypeCd><cntryTypeNm>Iceland</cntryTypeNm></return><return><cntryTypeCd>862</cntryTypeCd><cntryTypeNm>India</cntryTypeNm></return><return><cntryTypeCd>975</cntryTypeCd><cntryTypeNm>Indonesia</cntryTypeNm></return><return><cntryTypeCd>833</cntryTypeCd><cntryTypeNm>Iran</cntryTypeNm></return><return><cntryTypeCd>803</cntryTypeCd><cntryTypeNm>Iraq</cntryTypeNm></return><return><cntryTypeCd>900</cntryTypeCd><cntryTypeNm>Ireland</cntryTypeNm><eftCntryCd>54</eftCntryCd><eftCntryNm>Ireland</eftCntryNm></return><return><cntryTypeCd>977</cntryTypeCd><cntryTypeNm>Israel
        (Jerusalem)</cntryTypeNm><descpTxt>Jerusalem only</descpTxt></return><return><cntryTypeCd>873</cntryTypeCd><cntryTypeNm>Israel
        (Tel Aviv)</cntryTypeNm></return><return><cntryTypeCd>700</cntryTypeCd><cntryTypeNm>Italy</cntryTypeNm><eftCntryCd>55</eftCntryCd><eftCntryNm>Italy</eftCntryNm></return><return><cntryTypeCd>838</cntryTypeCd><cntryTypeNm>Jamaica</cntryTypeNm></return><return><cntryTypeCd>713</cntryTypeCd><cntryTypeNm>Japan</cntryTypeNm></return><return><cntryTypeCd>985</cntryTypeCd><cntryTypeNm>Jordan</cntryTypeNm></return><return><cntryTypeCd>740</cntryTypeCd><cntryTypeNm>Kazakhstan</cntryTypeNm></return><return><cntryTypeCd>869</cntryTypeCd><cntryTypeNm>Kenya</cntryTypeNm></return><return><cntryTypeCd>809</cntryTypeCd><cntryTypeNm>Kiribati</cntryTypeNm></return><return><cntryTypeCd>921</cntryTypeCd><cntryTypeNm>Kosovo</cntryTypeNm></return><return><cntryTypeCd>926</cntryTypeCd><cntryTypeNm>Kuwait</cntryTypeNm></return><return><cntryTypeCd>750</cntryTypeCd><cntryTypeNm>Kyrgyzstan</cntryTypeNm></return><return><cntryTypeCd>936</cntryTypeCd><cntryTypeNm>Laos</cntryTypeNm></return><return><cntryTypeCd>991</cntryTypeCd><cntryTypeNm>Latvia</cntryTypeNm></return><return><cntryTypeCd>956</cntryTypeCd><cntryTypeNm>Lebanon</cntryTypeNm></return><return><cntryTypeCd>816</cntryTypeCd><cntryTypeNm>Leeward
        Islands</cntryTypeNm></return><return><cntryTypeCd>866</cntryTypeCd><cntryTypeNm>Lesotho</cntryTypeNm></return><return><cntryTypeCd>966</cntryTypeCd><cntryTypeNm>Liberia</cntryTypeNm></return><return><cntryTypeCd>804</cntryTypeCd><cntryTypeNm>Libya</cntryTypeNm></return><return><cntryTypeCd>886</cntryTypeCd><cntryTypeNm>Liechtenstein</cntryTypeNm></return><return><cntryTypeCd>993</cntryTypeCd><cntryTypeNm>Lithuania</cntryTypeNm></return><return><cntryTypeCd>986</cntryTypeCd><cntryTypeNm>Luxembourg</cntryTypeNm></return><return><cntryTypeCd>945</cntryTypeCd><cntryTypeNm>Macao</cntryTypeNm></return><return><cntryTypeCd>856</cntryTypeCd><cntryTypeNm>Macedonia</cntryTypeNm></return><return><cntryTypeCd>892</cntryTypeCd><cntryTypeNm>Madagascar</cntryTypeNm></return><return><cntryTypeCd>650</cntryTypeCd><cntryTypeNm>Malawi</cntryTypeNm></return><return><cntryTypeCd>824</cntryTypeCd><cntryTypeNm>Malaysia</cntryTypeNm></return><return><cntryTypeCd>694</cntryTypeCd><cntryTypeNm>Mali</cntryTypeNm></return><return><cntryTypeCd>907</cntryTypeCd><cntryTypeNm>Malta</cntryTypeNm></return><return><cntryTypeCd>878</cntryTypeCd><cntryTypeNm>Martinique</cntryTypeNm></return><return><cntryTypeCd>666</cntryTypeCd><cntryTypeNm>Mauritania</cntryTypeNm></return><return><cntryTypeCd>897</cntryTypeCd><cntryTypeNm>Mauritius</cntryTypeNm></return><return><cntryTypeCd>773</cntryTypeCd><cntryTypeNm>Mexico</cntryTypeNm></return><return><cntryTypeCd>770</cntryTypeCd><cntryTypeNm>Moldavia</cntryTypeNm></return><return><cntryTypeCd>927</cntryTypeCd><cntryTypeNm>Mongolia</cntryTypeNm></return><return><cntryTypeCd>920</cntryTypeCd><cntryTypeNm>Montenegro</cntryTypeNm></return><return><cntryTypeCd>816</cntryTypeCd><cntryTypeNm>Montserrat</cntryTypeNm></return><return><cntryTypeCd>854</cntryTypeCd><cntryTypeNm>Morocco</cntryTypeNm></return><return><cntryTypeCd>882</cntryTypeCd><cntryTypeNm>Mozambique</cntryTypeNm></return><return><cntryTypeCd>880</cntryTypeCd><cntryTypeNm>Namibia</cntryTypeNm></return><return><cntryTypeCd>872</cntryTypeCd><cntryTypeNm>Nepal</cntryTypeNm></return><return><cntryTypeCd>874</cntryTypeCd><cntryTypeNm>Netherlands</cntryTypeNm></return><return><cntryTypeCd>825</cntryTypeCd><cntryTypeNm>Netherlands
        Antilles</cntryTypeNm></return><return><cntryTypeCd>816</cntryTypeCd><cntryTypeNm>Nevis</cntryTypeNm></return><return><cntryTypeCd>809</cntryTypeCd><cntryTypeNm>New
        Caledonia</cntryTypeNm></return><return><cntryTypeCd>875</cntryTypeCd><cntryTypeNm>New
        Zealand</cntryTypeNm></return><return><cntryTypeCd>957</cntryTypeCd><cntryTypeNm>Nicaragua</cntryTypeNm></return><return><cntryTypeCd>682</cntryTypeCd><cntryTypeNm>Niger</cntryTypeNm></return><return><cntryTypeCd>967</cntryTypeCd><cntryTypeNm>Nigeria</cntryTypeNm></return><return><cntryTypeCd>906</cntryTypeCd><cntryTypeNm>North
        Korea</cntryTypeNm></return><return><cntryTypeCd>800</cntryTypeCd><cntryTypeNm>Northern
        Ireland</cntryTypeNm></return><return><cntryTypeCd>703</cntryTypeCd><cntryTypeNm>Norway</cntryTypeNm><eftCntryCd>53</eftCntryCd><eftCntryNm>Norway</eftCntryNm></return><return><cntryTypeCd>834</cntryTypeCd><cntryTypeNm>Oman</cntryTypeNm></return><return><cntryTypeCd>835</cntryTypeCd><cntryTypeNm>Pakistan</cntryTypeNm></return><return><cntryTypeCd>806</cntryTypeCd><cntryTypeNm>Panama</cntryTypeNm></return><return><cntryTypeCd>947</cntryTypeCd><cntryTypeNm>Papua
        New Guinea</cntryTypeNm></return><return><cntryTypeCd>987</cntryTypeCd><cntryTypeNm>Paraguay</cntryTypeNm></return><return><cntryTypeCd>997</cntryTypeCd><cntryTypeNm>Peru</cntryTypeNm></return><return><cntryTypeCd>600</cntryTypeCd><cntryTypeNm>Philippines</cntryTypeNm></return><return><cntryTypeCd>601</cntryTypeCd><cntryTypeNm>Philippines
        (restricted payments)</cntryTypeNm></return><return><cntryTypeCd>908</cntryTypeCd><cntryTypeNm>Poland</cntryTypeNm></return><return><cntryTypeCd>705</cntryTypeCd><cntryTypeNm>Portugal</cntryTypeNm><eftCntryCd>60</eftCntryCd><eftCntryNm>Portugal</eftCntryNm></return><return><cntryTypeCd>917</cntryTypeCd><cntryTypeNm>Qatar</cntryTypeNm></return><return><cntryTypeCd>849</cntryTypeCd><cntryTypeNm>Republic
        of Yemen</cntryTypeNm></return><return><cntryTypeCd>938</cntryTypeCd><cntryTypeNm>Romania</cntryTypeNm></return><return><cntryTypeCd>978</cntryTypeCd><cntryTypeNm>Russia</cntryTypeNm></return><return><cntryTypeCd>669</cntryTypeCd><cntryTypeNm>Rwanda</cntryTypeNm></return><return><cntryTypeCd>890</cntryTypeCd><cntryTypeNm>Sao-Tome/Principe</cntryTypeNm></return><return><cntryTypeCd>836</cntryTypeCd><cntryTypeNm>Saudi
        Arabia</cntryTypeNm></return><return><cntryTypeCd>800</cntryTypeCd><cntryTypeNm>Scotland</cntryTypeNm></return><return><cntryTypeCd>889</cntryTypeCd><cntryTypeNm>Senegal</cntryTypeNm></return><return><cntryTypeCd>902</cntryTypeCd><cntryTypeNm>Serbia</cntryTypeNm></return><return><cntryTypeCd>902</cntryTypeCd><cntryTypeNm>Serbia/Montenegro</cntryTypeNm></return><return><cntryTypeCd>870</cntryTypeCd><cntryTypeNm>Seychelles</cntryTypeNm></return><return><cntryTypeCd>695</cntryTypeCd><cntryTypeNm>Sicily</cntryTypeNm></return><return><cntryTypeCd>859</cntryTypeCd><cntryTypeNm>Sierra
        Leone</cntryTypeNm></return><return><cntryTypeCd>968</cntryTypeCd><cntryTypeNm>Singapore</cntryTypeNm></return><return><cntryTypeCd>720</cntryTypeCd><cntryTypeNm>Slovakia</cntryTypeNm></return><return><cntryTypeCd>840</cntryTypeCd><cntryTypeNm>Slovenia</cntryTypeNm></return><return><cntryTypeCd>998</cntryTypeCd><cntryTypeNm>Somalia</cntryTypeNm></return><return><cntryTypeCd>887</cntryTypeCd><cntryTypeNm>South
        Africa</cntryTypeNm></return><return><cntryTypeCd>916</cntryTypeCd><cntryTypeNm>South
        Korea</cntryTypeNm></return><return><cntryTypeCd>745</cntryTypeCd><cntryTypeNm>Spain</cntryTypeNm><eftCntryCd>58</eftCntryCd><eftCntryNm>Spain</eftCntryNm></return><return><cntryTypeCd>963</cntryTypeCd><cntryTypeNm>Sri
        Lanka</cntryTypeNm></return><return><cntryTypeCd>816</cntryTypeCd><cntryTypeNm>St.
        Kitts</cntryTypeNm></return><return><cntryTypeCd>810</cntryTypeCd><cntryTypeNm>St.
        Lucia</cntryTypeNm></return><return><cntryTypeCd>812</cntryTypeCd><cntryTypeNm>St.
        Vincent</cntryTypeNm></return><return><cntryTypeCd>988</cntryTypeCd><cntryTypeNm>Sudan</cntryTypeNm></return><return><cntryTypeCd>909</cntryTypeCd><cntryTypeNm>Suriname</cntryTypeNm></return><return><cntryTypeCd>660</cntryTypeCd><cntryTypeNm>Swaziland</cntryTypeNm></return><return><cntryTypeCd>782</cntryTypeCd><cntryTypeNm>Sweden</cntryTypeNm><eftCntryCd>57</eftCntryCd><eftCntryNm>Sweden</eftCntryNm></return><return><cntryTypeCd>846</cntryTypeCd><cntryTypeNm>Switzerland</cntryTypeNm><eftCntryCd>59</eftCntryCd><eftCntryNm>Switzerland</eftCntryNm></return><return><cntryTypeCd>807</cntryTypeCd><cntryTypeNm>Syria</cntryTypeNm></return><return><cntryTypeCd>919</cntryTypeCd><cntryTypeNm>Taiwan</cntryTypeNm></return><return><cntryTypeCd>784</cntryTypeCd><cntryTypeNm>Tajikistan</cntryTypeNm></return><return><cntryTypeCd>697</cntryTypeCd><cntryTypeNm>Tanzania</cntryTypeNm></return><return><cntryTypeCd>929</cntryTypeCd><cntryTypeNm>Thailand</cntryTypeNm></return><return><cntryTypeCd>805</cntryTypeCd><cntryTypeNm>Togo</cntryTypeNm></return><return><cntryTypeCd>848</cntryTypeCd><cntryTypeNm>Trinidad
        and Tobago</cntryTypeNm></return><return><cntryTypeCd>949</cntryTypeCd><cntryTypeNm>Tunisia</cntryTypeNm></return><return><cntryTypeCd>857</cntryTypeCd><cntryTypeNm>Turkey
        (Adana only)</cntryTypeNm><descpTxt>Adana only</descpTxt></return><return><cntryTypeCd>847</cntryTypeCd><cntryTypeNm>Turkey
        (except Adana)</cntryTypeNm></return><return><cntryTypeCd>790</cntryTypeCd><cntryTypeNm>Turkmenistan</cntryTypeNm></return><return><cntryTypeCd>000</cntryTypeCd><cntryTypeNm>USA</cntryTypeNm></return><return><cntryTypeCd>969</cntryTypeCd><cntryTypeNm>Uganda</cntryTypeNm></return><return><cntryTypeCd>801</cntryTypeCd><cntryTypeNm>Ukraine</cntryTypeNm></return><return><cntryTypeCd>837</cntryTypeCd><cntryTypeNm>United
        Arab Emirates</cntryTypeNm></return><return><cntryTypeCd>800</cntryTypeCd><cntryTypeNm>United
        Kingdom</cntryTypeNm></return><return><cntryTypeCd>979</cntryTypeCd><cntryTypeNm>Uruguay</cntryTypeNm></return><return><cntryTypeCd>731</cntryTypeCd><cntryTypeNm>Uzbekistan</cntryTypeNm></return><return><cntryTypeCd>809</cntryTypeCd><cntryTypeNm>Vanuatu</cntryTypeNm></return><return><cntryTypeCd>707</cntryTypeCd><cntryTypeNm>Venezuela</cntryTypeNm></return><return><cntryTypeCd>962</cntryTypeCd><cntryTypeNm>Vietnam</cntryTypeNm></return><return><cntryTypeCd>800</cntryTypeCd><cntryTypeNm>Wales</cntryTypeNm></return><return><cntryTypeCd>815</cntryTypeCd><cntryTypeNm>Western
        Samoa</cntryTypeNm></return><return><cntryTypeCd>849</cntryTypeCd><cntryTypeNm>Yemen
        Arab Republic</cntryTypeNm></return><return><cntryTypeCd>662</cntryTypeCd><cntryTypeNm>Zambia</cntryTypeNm></return><return><cntryTypeCd>918</cntryTypeCd><cntryTypeNm>Zimbabwe</cntryTypeNm></return></ns0:findCountriesResponse></S:Body></S:Envelope>
  recorded_at: Wed, 25 Aug 2021 14:58:54 GMT
recorded_with: VCR 6.0.0
